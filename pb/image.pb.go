// Code generated by protoc-gen-go.
// source: image.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	image.proto
	imager.proto
	jobs.proto

It has these top-level messages:
	InputImage
	CreateJobRequest
	CreateJobResponse
	CreateFullJobRequest
	CreateFullJobResponse
	JobRequest
	JobAck
	Job
	JobResult
	JobResultResponse
	JobFail
	JobProgressResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ImageFormat int32

const (
	ImageFormat_UNKNOWN ImageFormat = 0
	ImageFormat_JPG     ImageFormat = 1
	ImageFormat_PNG     ImageFormat = 2
)

var ImageFormat_name = map[int32]string{
	0: "UNKNOWN",
	1: "JPG",
	2: "PNG",
}
var ImageFormat_value = map[string]int32{
	"UNKNOWN": 0,
	"JPG":     1,
	"PNG":     2,
}

func (x ImageFormat) String() string {
	return proto.EnumName(ImageFormat_name, int32(x))
}
func (ImageFormat) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InputImage struct {
	Title  string      `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Format ImageFormat `protobuf:"varint,2,opt,name=format,enum=ImageFormat" json:"format,omitempty"`
	Image  []byte      `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (m *InputImage) Reset()                    { *m = InputImage{} }
func (m *InputImage) String() string            { return proto.CompactTextString(m) }
func (*InputImage) ProtoMessage()               {}
func (*InputImage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*InputImage)(nil), "InputImage")
	proto.RegisterEnum("ImageFormat", ImageFormat_name, ImageFormat_value)
}

var fileDescriptor0 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xcc, 0x4d, 0x4c,
	0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x8a, 0xe3, 0xe2, 0xf2, 0xcc, 0x2b, 0x28, 0x2d,
	0xf1, 0x04, 0x89, 0x09, 0x89, 0x70, 0xb1, 0x96, 0x64, 0x96, 0xe4, 0xa4, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0x41, 0x38, 0x42, 0x2a, 0x5c, 0x6c, 0x69, 0xf9, 0x45, 0xb9, 0x89, 0x25, 0x12,
	0x4c, 0x40, 0x61, 0x3e, 0x23, 0x1e, 0x3d, 0xb0, 0x6a, 0x37, 0xb0, 0x58, 0x10, 0x54, 0x0e, 0xa4,
	0x17, 0x6c, 0xb0, 0x04, 0x33, 0x50, 0x11, 0x4f, 0x10, 0x84, 0xa3, 0xa5, 0xc3, 0xc5, 0x8d, 0xa4,
	0x58, 0x88, 0x9b, 0x8b, 0x3d, 0xd4, 0xcf, 0xdb, 0xcf, 0x3f, 0xdc, 0x4f, 0x80, 0x41, 0x88, 0x9d,
	0x8b, 0xd9, 0x2b, 0xc0, 0x5d, 0x80, 0x11, 0xc4, 0x08, 0xf0, 0x73, 0x17, 0x60, 0x72, 0x52, 0xe6,
	0x52, 0xcc, 0x4b, 0x2d, 0xd1, 0x4b, 0x2b, 0x4a, 0xcc, 0x4b, 0xce, 0x28, 0xd5, 0xcb, 0x4b, 0x2d,
	0x2d, 0x4a, 0xcc, 0x29, 0x2e, 0xa9, 0xcc, 0x49, 0x4d, 0x2c, 0x2a, 0x01, 0x3a, 0x38, 0x2b, 0x35,
	0xb9, 0x24, 0x89, 0x0d, 0xec, 0x72, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xb1, 0x5a,
	0x81, 0xc8, 0x00, 0x00, 0x00,
}
